[{"/Users/jamesclifford/Projects/musiconnect-app/src/index.js":"1","/Users/jamesclifford/Projects/musiconnect-app/src/reportWebVitals.js":"2","/Users/jamesclifford/Projects/musiconnect-app/src/App.js":"3","/Users/jamesclifford/Projects/musiconnect-app/src/LandingPage/Landing.js":"4","/Users/jamesclifford/Projects/musiconnect-app/src/Signup/Signup.js":"5","/Users/jamesclifford/Projects/musiconnect-app/src/EditProfile/Editprofile.js":"6","/Users/jamesclifford/Projects/musiconnect-app/src/Search/Search.js":"7","/Users/jamesclifford/Projects/musiconnect-app/src/SearchResults/Searchresults.js":"8","/Users/jamesclifford/Projects/musiconnect-app/src/User/User.js":"9","/Users/jamesclifford/Projects/musiconnect-app/src/Profile/Profile.js":"10","/Users/jamesclifford/Projects/musiconnect-app/src/About/About.js":"11","/Users/jamesclifford/Projects/musiconnect-app/src/Login/Login.js":"12","/Users/jamesclifford/Projects/musiconnect-app/src/STORE/Users.js":"13","/Users/jamesclifford/Projects/musiconnect-app/src/Nav/Nav.js":"14"},{"size":543,"mtime":1607038925995,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1607038224088,"results":"17","hashOfConfig":"16"},{"size":12851,"mtime":1608005251949,"results":"18","hashOfConfig":"16"},{"size":2795,"mtime":1608076292923,"results":"19","hashOfConfig":"16"},{"size":1348,"mtime":1608077207190,"results":"20","hashOfConfig":"16"},{"size":6987,"mtime":1607809938348,"results":"21","hashOfConfig":"16"},{"size":2694,"mtime":1608058295686,"results":"22","hashOfConfig":"16"},{"size":3776,"mtime":1608082939252,"results":"23","hashOfConfig":"16"},{"size":3877,"mtime":1608083005295,"results":"24","hashOfConfig":"16"},{"size":3667,"mtime":1608083093162,"results":"25","hashOfConfig":"16"},{"size":2557,"mtime":1608077151690,"results":"26","hashOfConfig":"16"},{"size":1336,"mtime":1608076929705,"results":"27","hashOfConfig":"16"},{"size":4617,"mtime":1607539519391,"results":"28","hashOfConfig":"16"},{"size":2148,"mtime":1608064501151,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"6745g6",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":3,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jamesclifford/Projects/musiconnect-app/src/index.js",[],["62","63"],"/Users/jamesclifford/Projects/musiconnect-app/src/reportWebVitals.js",[],"/Users/jamesclifford/Projects/musiconnect-app/src/App.js",["64","65","66","67"],"import React from 'react';\nimport './App.css';\nimport { Route, withRouter } from 'react-router-dom'\nimport Landing from './LandingPage/Landing'\nimport Signup from './Signup/Signup'\nimport Editprofile from './EditProfile/Editprofile'\nimport Search from './Search/Search'\nimport Searchresults from './SearchResults/Searchresults'\nimport User from './User/User'\nimport Profile from './Profile/Profile'\nimport About from './About/About'\nimport Login from './Login/Login'\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      user: {},\n      searchResults: [], \n      searchValues: []\n    }\n  }\n\n  handleLogin = (event) => {\n    event.preventDefault(); \n    const username = String(event.target.username.value);\n    const password = String(event.target.password.value);\n    // fetch('http://localhost:8000/api/login', {\n      fetch('https://intense-thicket-43454.herokuapp.com/api/login', {\n      method: \"GET\", \n      headers: {\n        'content-type': 'application/json', \n        'username': `${username}`, \n        'password': `${password}`\n      }\n    })\n    .then(res => {\n      if(!res.ok) {\n        throw new Error\n      }\n      return res.json()\n    })\n    .then(resJson => {\n      this.setState({\n        user: resJson\n      })\n      // this.props.history.push('/search')\n    })\n    .then(() => {\n      this.props.history.push('/search')\n    })\n    .catch(error => this.setState({\n      user: 'not found'\n    }))\n  }\n\n  handleSearch = (event) => {\n    event.preventDefault();\n    const inst = event.target.instrument.value;\n    const city = event.target.city.value;\n    console.log(inst, city)\n    // fetch('http://localhost:8000/api/search', {\n      fetch('https://intense-thicket-43454.herokuapp.com/api/search', {\n      method: \"GET\", \n      headers: {\n        'content-type': 'application/json', \n        'instrument': `${inst}`, \n        'city': `${city}`\n      }\n    })\n    .then(res => {\n      if (res.ok == false) {\n        throw new Error\n      }\n      return res.json()\n    })\n    .then(resJson => {\n      this.setState({\n        searchResults: resJson, \n        searchValues: [inst, city]\n      })\n    })\n    .then(() => {\n      this.props.history.push('/results')\n    })\n    .catch(error => this.setState({\n      searchResults: [], \n      searchValues: [inst, city]\n    }))\n    .then(() => {\n      this.props.history.push('/results')\n    })\n  }\n\n  backButton = (event) => {\n    event.preventDefault();\n    this.props.history.goBack();\n  }\n\n  handleUpdateProfile = (event) => {\n    event.preventDefault();\n    const id = this.state.user.id\n    const newUsername = event.target.username.value; \n    const newPassword = event.target.password.value; \n    const newName = event.target.name.value; \n    const newCity = parseInt(event.target.city.value); \n    const newInstagram = event.target.instagram.value; \n    const newFacebook = event.target.facebook.value; \n    const newTwitter = event.target.twitter.value; \n    const newSoundcloud = event.target.soundcloud.value; \n    const newBandcamp = event.target.bandcamp.value; \n    const newSpotify = event.target.spotify.value; \n    const newBio = event.target.bio.value;\n\n    let newInstrument = [];\n    \n    // changed instrument values to string due to postgres issue\n    const guitar = event.target.guitar.checked ? event.target.guitar.value : null\n    const bass = event.target.bass.checked ? event.target.bass.value : null\n    const drums = event.target.drums.checked ? event.target.drums.value : null\n    const piano = event.target.piano.checked ? event.target.piano.value : null\n    const singer = event.target.singer.checked ? event.target.singer.value : null\n    const producer = event.target.producer.checked ? event.target.producer.value : null\n    \n    \n    if (guitar) {\n      newInstrument.push(guitar)\n    } \n\n    if (bass) {\n      newInstrument.push(bass)\n    } \n\n    if (drums) {\n      newInstrument.push(drums)\n    }\n\n    if (piano) {\n      newInstrument.push(piano)\n    }\n\n    if (singer) {\n      newInstrument.push(singer)\n    }\n\n    if (producer) {\n      newInstrument.push(producer)\n    }\n\n    if (!guitar && !bass && !drums && !piano && !singer && !producer) {\n      newInstrument = [...this.state.user.instrument]\n    }\n\n    const updatedUser = {\n      id: this.state.user.id, \n      email: this.state.user.email, \n      instrument: newInstrument\n    };\n\n    if (!newUsername) {\n      updatedUser.username = this.state.user.username\n    } else {\n      updatedUser.username = newUsername\n    }; \n\n    if (!newPassword) {\n      updatedUser.password = this.state.user.password\n    } else if (newPassword.length > 6 && newPassword.match(/[A-Z]/) && newPassword.match(/\\d+/g)) {\n      updatedUser.password = newPassword\n    } else {\n      alert('password must be six characters long, include one uppercase letter, and one number')\n    }; \n\n    if (!newName) {\n      updatedUser.name = this.state.user.name\n    } else {\n      updatedUser.name = newName\n    }; \n\n    if (!newCity) {\n      updatedUser.city = this.state.user.city\n    } else {\n      updatedUser.city = newCity\n    }; \n\n    \n    if (!newInstrument) {\n      updatedUser.instrument = this.state.user.instrument\n    } else {\n      updatedUser.instrument = newInstrument\n    };  \n\n    if (!newInstagram) {\n      updatedUser.instagram = this.state.user.instagram\n    } else {\n      updatedUser.instagram = newInstagram\n    }; \n\n    if (!newFacebook) {\n      updatedUser.facebook = this.state.user.facebook\n    } else {\n      updatedUser.facebook = newFacebook\n    }; \n\n    if (!newTwitter) {\n      updatedUser.twitter = this.state.user.twitter\n    } else {\n      updatedUser.twitter = newTwitter\n    };\n\n    if (!newSoundcloud) {\n      updatedUser.soundcloud = this.state.user.soundcloud\n    } else {\n      updatedUser.soundcloud = newSoundcloud\n    };\n\n    if (!newBandcamp) {\n      updatedUser.bandcamp = this.state.user.bandcamp\n    } else {\n      updatedUser.bandcamp = newBandcamp\n    };\n\n    if (!newSpotify) {\n      updatedUser.spotify = this.state.user.spotify\n    } else {\n      updatedUser.spotify = newSpotify\n    };\n\n    if (!newBio) {\n      updatedUser.bio = this.state.user.bio\n    } else {\n      updatedUser.bio = newBio\n    };\n    \n    //fetch(`http://localhost:8000/api/users/${id}`, {\n      fetch(`https://intense-thicket-43454.herokuapp.com/api/users/${id}`, {\n      method: \"PATCH\", \n      body: JSON.stringify(updatedUser), \n      headers: {\n        'content-type': 'application/json'\n      }\n    })\n    .then(res => {\n      console.log(res)\n      if(!res.ok) {\n        throw new Error('patch error')\n      }\n      return res.json()\n    })\n    .then(resJson => {\n      console.log(resJson)\n      this.setState({\n        user: resJson\n      }); \n      this.props.history.push('/profile')\n    })\n    .catch(error => console.log(error))\n  }\n \n  handleAddUser = (event) => {\n    event.preventDefault();\n    const email = String(event.target.email.value); \n    const password = String(event.target.password.value); \n    console.log(email, password)\n\n\n    const newUser = {\n      email: email,\n      name: '',\n      username: '', \n      password: password, \n      instrument: [], \n      city: 1, \n      instagram: '', \n      facebook: '', \n      twitter: '', \n      soundcloud: '', \n      bandcamp: '', \n      spotify: '', \n      bio: ''\n    };\n\n    //fetch('http://localhost:8000/api/users/', {\n      fetch('https://intense-thicket-43454.herokuapp.com/api/users/', {\n        method: \"POST\", \n        body: JSON.stringify(newUser), \n        headers: {\n          'content-type': 'application/json'\n        }\n      })\n        .then(res => {\n          if (!res.ok) {\n            throw new Error\n          }\n          return res.json()\n        })\n        .then(resJson => {\n          this.setState({\n            user: resJson\n          }); \n          this.props.history.push('/editprofile')\n        })\n        .catch(error => alert('password must be at least 6 characters and include one uppercase letter and one number'))\n        \n    // previous validation \n\n    /*\n    if (password.length < 6 && !password.match(/[A-Z]/) && !password.match(/\\d+/g)) {\n      alert('password must be at least six characters long, include one uppercase letter, and one number')\n    } else {\n      const newUser = {\n        id: 21,\n        email: email,\n        name: '',\n        username: '', \n        password: password, \n        instrument: '', \n        city: '', \n        instagram: '', \n        facebook: '', \n        twitter: '', \n        soundcloud: '', \n        bandcamp: '', \n        spotify: '', \n        bio: ''\n      }; \n\n      fetch('http://localhost:8000/api/users/', {\n        method: \"POST\", \n        body: JSON.stringify(newUser), \n        headers: {\n          'content-type': 'application/json'\n        }\n      })\n        .then(res => {\n          if (!res.ok) {\n            throw new Error\n          }\n          return res.json()\n        })\n        .then(resJson => {\n          this.setState({\n            user: resJson\n          }); \n          this.props.history.push('/editprofile')\n        })\n        .catch(error => console.log(error))\n\n      /*\n      this.setState({\n        user: newUser\n      });\n      this.props.history.push('/editprofile') \n    } */\n  }\n\n  handleClearSearch = (event) => {\n    event.preventDefault();\n    this.setState({\n      searchResults: [], \n      searchValues: []\n    });\n    this.props.history.push('/search')\n  }\n\n  handleLogout = (event) => {\n    event.preventDefault();\n    this.setState({\n      user: [], \n      searchResults: [], \n      searchValues: []\n    })\n    this.props.history.push('/')\n  }\n\n  handleDelete = (event) => {\n    event.preventDefault(); \n    const id = this.state.user.id; \n\n    // fetch(`http://localhost:8000/api/users/${id}`, {\n      fetch(`https://intense-thicket-43454.herokuapp.com/api/users/${id}`, {\n      method: \"DELETE\", \n      headers: {\n        'content-type': 'application/json'\n      }\n    })\n    .then(res => {\n      if (!res.ok) {\n        throw new Error('delete error')\n      }\n    })\n    .then(() => {\n      this.setState({\n        user: []\n      })\n      this.props.history.push('/')\n    })\n    .catch(error => console.log(error))\n  }\n\n  render() {\n    \n    const searchResults = this.state.searchResults;\n    const user = this.state.user;\n    console.log(this.state.searchValues)\n    \n    return (\n      <div className=\"app\">\n        <Route\n        exact path='/'\n        render={(props) => (\n          <Landing {...props} user={user} />\n        )}\n        />\n        <Route\n        path='/signup'\n        render={(props) => (\n          <Signup {...props} handleAddUser={this.handleAddUser} />\n        )}\n        />\n        <Route\n        path='/editprofile'\n        render={(props) => (\n          <Editprofile {...props} \n          backButton={this.backButton} \n          user={user}\n          handleUpdateProfile={this.handleUpdateProfile}\n          handleLogout={this.handleLogout} \n          handleClearSearch={this.handleClearSearch} \n          handleDelete={this.handleDelete}/>\n        )}\n        />\n        <Route \n        path='/search'\n        render={(props) => (\n          <Search {...props} \n          handleSearch={this.handleSearch}\n          searchResults={searchResults}\n          handleLogout={this.handleLogout} \n          handleClearSearch={this.handleClearSearch}\n          user={user}\n          searchValues={this.state.searchValues}/>\n        )}\n        />\n        <Route \n        path='/results'\n        render={(props) => (\n          <Searchresults {...props} \n          handleSearch={this.handleSearch} \n          handleClearSearch={this.handleClearSearch}\n          handleLogout={this.handleLogout}\n          searchResults={searchResults}\n          user={user}\n          searchValues={this.state.searchValues}/>\n        )}\n        />\n        <Route\n        path='/user/:id'\n        render={(props) => (\n          <User {...props}  \n          backButton={this.backButton} \n          user={user} \n          handleLogout={this.handleLogout} \n          handleClearSearch={this.handleClearSearch}\n          searchResults={this.state.searchResults} />\n        )}\n        />\n        <Route \n        path='/profile'\n        render={(props) => (\n          <Profile {...props} user={user} \n          handleClearSearch={this.handleClearSearch} \n          handleLogout={this.handleLogout} />\n        )}\n        />\n        <Route \n        path='/about'\n        render={(props) => (\n          <About {...props} user={user}\n          handleLogout={this.handleLogout} \n          handleClearSearch={this.handleClearSearch} />\n        )}\n        />\n        <Route \n        path='/login'\n        render={(props) => (\n          <Login {...props} user={user} handleLogin={this.handleLogin} />\n        )}\n\n        />\n      </div>\n    )\n  }\n}\n\nexport default withRouter(App);\n\n\n","/Users/jamesclifford/Projects/musiconnect-app/src/LandingPage/Landing.js",[],"/Users/jamesclifford/Projects/musiconnect-app/src/Signup/Signup.js",[],"/Users/jamesclifford/Projects/musiconnect-app/src/EditProfile/Editprofile.js",["68"],"import React from 'react'\nimport './Editprofile.css'\nimport avatar from '../Images/icon-user-default.png' \nimport Nav from '../Nav/Nav'\nimport { Link } from 'react-router-dom'\n\nclass Editprofile extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            showDelete: false\n        }\n    }\n\n    renderDelete = (event) => {\n        event.preventDefault();\n        this.setState(prevState => ({\n            showDelete: !prevState.showDelete\n        }))\n    }\n\n    render() {\n        return (\n            <>\n            <header>\n                \n                {\n                    (!this.props.user.username || !this.props.user.name || !this.props.user.city)\n                    ? <h2>Musiconnect</h2>\n                    : <><button onClick={event => this.props.handleClearSearch(event)}><h2>Musiconnect</h2></button>\n                    <Nav user={this.props.user} handleLogout={this.props.handleLogout} handleClearSearch={this.props.handleClearSearch} /></>\n                }\n            </header>\n            <main>\n                <section className=\"profile\">\n                    <div className=\"form-container\">\n                        <h1>Edit Your Profile</h1>\n                        <img src={avatar} alt=\"avatar\" /><br/>\n                        <button>Change Profile Image</button>\n                        <form onSubmit={event => this.props.handleUpdateProfile(event)}>\n                            <label htmlFor=\"username\">*Username:</label>\n                            {\n                                (this.props.user.username)\n                                ? <> <input id=\"username\" type=\"text\" /><br/></>\n                                : <> <input id=\"username\" type=\"text\" required/><br/></>\n                            }\n                            <label htmlFor=\"password\">New Password:</label>\n                            <input type=\"password\" id=\"password\" /><br/>\n                            <label htmlFor=\"name\">*Name:</label>\n                            {\n                                (this.props.user.name)\n                                ? <> <input id=\"name\" type=\"text\" /><br/></>\n                                : <> <input id=\"name\" type=\"text\" required /><br/></>\n                            }\n                            <label htmlFor=\"city\">*City:</label>\n                            {\n                                (this.props.user.city)\n                                ? <><select id=\"city\">\n                                    <option value=\"\" disabled defaultValue>Select</option>\n                                    <option value=\"1\">Los Angeles</option>\n                                    <option value=\"2\">New York</option>\n                                    <option value=\"3\">Nashville</option>\n                                    <option value=\"4\">Austin</option>\n                                    <option value=\"5\">Chicago</option>\n                                </select><br/><br/></>\n                                : <><select id=\"city\" required>\n                                    <option value=\"\" disabled defaultValue>Select</option>\n                                    <option value=\"1\">Los Angeles</option>\n                                    <option value=\"2\">New York</option>\n                                    <option value=\"3\">Nashville</option>\n                                    <option value=\"4\">Austin</option>\n                                    <option value=\"5\">Chicago</option>\n                                </select><br/><br/></>\n                            }\n                            <span>*I am a:</span><br/>\n            \n                            <div>\n                                <input type=\"checkbox\" id=\"guitar\" value=\"guitarist\" name=\"instrument\" />\n                                <label htmlFor=\"guitar\">Guitarist</label><br/>\n                                <input type=\"checkbox\" id=\"bass\" value=\"bassist\" name=\"instrument\" />\n                                <label htmlFor=\"bass\" >Bassist</label><br/>\n                                <input type=\"checkbox\" id=\"drums\" value=\"drummer\" name=\"instrument\" />\n                                <label htmlFor=\"drums\">Drummer</label><br/>\n                                <input type=\"checkbox\" id=\"piano\" value=\"pianist/keyboards\" name=\"instrument\" />\n                                <label htmlFor=\"piano\" >Pianist/keyboards</label><br/>\n                                <input type=\"checkbox\" id=\"singer\" value=\"singer\" name=\"instrument\" />\n                                <label htmlFor=\"singer\" >Singer</label><br/>\n                                <input type=\"checkbox\" id=\"producer\" value=\"producer\" name=\"instrument\" />\n                                <label htmlFor=\"producer\" >Producer</label><br/><br/>\n                            </div>\n                            <span>Socials:</span><br/>\n                            <label htmlFor=\"instagram\">Instagram:</label>\n                            <input id=\"instagram\" type=\"text\" /><br/>\n                            <label htmlFor=\"facebook\">Facebook:</label>\n                            <input id=\"facebook\" type=\"text\" /><br/>\n                            <label htmlFor=\"twitter\">Twitter:</label>\n                            <input id=\"twitter\" type=\"text\" /><br/><br/>\n                            <span>Links to your music:</span><br/>\n                            <label htmlFor=\"soundcloud\">Soundcloud:</label>\n                            <input id=\"soundcloud\" type=\"text\" /><br/>\n                            <label htmlFor=\"bandcamp\">Bandcamp:</label>\n                            <input id=\"bandcamp\" type=\"text\" /><br/>\n                            <label htmlFor=\"spotify\">Spotify:</label>\n                            <input id=\"spotify\" type=\"text\"/><br/><br/>\n                            <label htmlFor=\"bio\">Bio:</label><br/>\n                            <textarea id=\"bio\" ></textarea><br/>\n                            <button type=\"submit\">Save</button>\n                        </form>\n                        {\n                            (!this.props.user.username || !this.props.user.name || !this.props.user.city)\n                            ? null\n                            : <button className=\"render-delete-button\" onClick={event => this.renderDelete(event)}>Delete My Account</button>\n                        }\n                    </div>\n                    <div className=\"delete-container\">\n                        {\n                            this.state.showDelete\n                            ? <><h3>Are you sure?</h3>\n                            <button onClick={event => this.props.handleDelete(event)}>Yes</button></>\n                            : null\n                        }\n                    </div>\n                </section>\n            </main>\n            <footer>\n                <span>\t&#169; Musiconnect 2020</span>\n            </footer>\n        </>\n        )\n    }\n}\n\nexport default Editprofile","/Users/jamesclifford/Projects/musiconnect-app/src/Search/Search.js",[],"/Users/jamesclifford/Projects/musiconnect-app/src/SearchResults/Searchresults.js",[],"/Users/jamesclifford/Projects/musiconnect-app/src/User/User.js",["69","70","71","72","73"],"/Users/jamesclifford/Projects/musiconnect-app/src/Profile/Profile.js",["74","75","76","77"],"/Users/jamesclifford/Projects/musiconnect-app/src/About/About.js",["78"],"/Users/jamesclifford/Projects/musiconnect-app/src/Login/Login.js",[],"/Users/jamesclifford/Projects/musiconnect-app/src/STORE/Users.js",[],["79","80"],"/Users/jamesclifford/Projects/musiconnect-app/src/Nav/Nav.js",["81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":39,"column":15,"nodeType":"88","messageId":"89","endLine":39,"endColumn":24,"fix":"90"},{"ruleId":"91","severity":1,"message":"92","line":72,"column":18,"nodeType":"93","messageId":"94","endLine":72,"endColumn":20},{"ruleId":"86","severity":1,"message":"87","line":73,"column":15,"nodeType":"88","messageId":"89","endLine":73,"endColumn":24,"fix":"95"},{"ruleId":"86","severity":1,"message":"87","line":293,"column":19,"nodeType":"88","messageId":"89","endLine":293,"endColumn":28,"fix":"96"},{"ruleId":"97","severity":1,"message":"98","line":5,"column":10,"nodeType":"99","messageId":"100","endLine":5,"endColumn":14},{"ruleId":"101","severity":1,"message":"102","line":25,"column":57,"nodeType":"103","messageId":"104","endLine":25,"endColumn":59},{"ruleId":"91","severity":1,"message":"92","line":26,"column":33,"nodeType":"93","messageId":"94","endLine":26,"endColumn":35},{"ruleId":"105","severity":1,"message":"106","line":40,"column":80,"nodeType":"107","endLine":40,"endColumn":95},{"ruleId":"105","severity":1,"message":"106","line":41,"column":81,"nodeType":"107","endLine":41,"endColumn":96},{"ruleId":"105","severity":1,"message":"106","line":42,"column":82,"nodeType":"107","endLine":42,"endColumn":97},{"ruleId":"97","severity":1,"message":"108","line":6,"column":10,"nodeType":"99","messageId":"100","endLine":6,"endColumn":25},{"ruleId":"105","severity":1,"message":"106","line":22,"column":68,"nodeType":"107","endLine":22,"endColumn":83},{"ruleId":"105","severity":1,"message":"106","line":23,"column":69,"nodeType":"107","endLine":23,"endColumn":84},{"ruleId":"105","severity":1,"message":"106","line":24,"column":70,"nodeType":"107","endLine":24,"endColumn":85},{"ruleId":"97","severity":1,"message":"109","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":14},{"ruleId":"82","replacedBy":"110"},{"ruleId":"84","replacedBy":"111"},{"ruleId":"97","severity":1,"message":"108","line":4,"column":10,"nodeType":"99","messageId":"100","endLine":4,"endColumn":25},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"114","text":"115"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"range":"116","text":"115"},{"range":"117","text":"115"},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'FontAwesomeIcon' is defined but never used.","'avatar' is defined but never used.",["112"],["113"],"no-global-assign","no-unsafe-negation",[1155,1155],"()",[1990,1990],[7684,7684]]